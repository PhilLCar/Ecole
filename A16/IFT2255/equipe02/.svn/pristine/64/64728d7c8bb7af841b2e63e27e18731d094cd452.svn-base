import java.util.*;

import javax.swing.JOptionPane;
import javax.swing.JPanel;

//TODO javacdoc for SessionManager
public class SessionManager {

	private static ArrayList<Session> activeSessions = new ArrayList<Session>();
	private static UserDBManager userDB = new UserDBManager();

	@SuppressWarnings("unused") //// Pour le if (true) L25
	public static Session authenticate(int userID, String pass) {
		User auth = userDB.find(userID);
		Session session;
		if (auth == null) {
			JOptionPane.showMessageDialog(new JPanel(), "Mauvais code utilisateur", "Erreur", JOptionPane.ERROR_MESSAGE);
			return null;
		}
		for (Session s : activeSessions) {
			if (s.getUser().equals(auth))
				JOptionPane.showMessageDialog(new JPanel(), "Votre compte est déjà connecté", "Erreur", JOptionPane.ERROR_MESSAGE);
				return null;
		}
		// Enlever true pour tester
		if (true || User.MD5(pass).equals(auth.getHash()))
			switch(auth.getClass().getName()){
			case "Member":
				session = new MemberSession((Member)auth);
				activeSessions.add(session);
				return session;
			case "Supplier":
				session = new SupplierSession((Supplier)auth);
				activeSessions.add(session);
				return session;
			case "Supervisor":
				session = new SupervisorSession((Supervisor)auth);
				activeSessions.add(session);
				return session;
			}
		JOptionPane.showMessageDialog(new JPanel(), "Mot de passe incorrect", "Erreur", JOptionPane.ERROR_MESSAGE);
		return null;
	}

	/**
	 *
	 * @param userID
	 * @param hash
	 */
	public void getSessionFromID(int userID, String hash) {
		// TODO - implement SessionManager.getSessionFromID
		throw new UnsupportedOperationException();
	}
	/**
	 *
	 * @param userID
	 */
	public static boolean deleteSession(Session session) {
		return activeSessions.remove(session);
	}

}
